version: "3.5"

networks:
  default:
    driver: bridge


volumes:
    postgres:
    pgadmin:


services:
  postgres:
    container_name: postgres
    image: postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -h localhost -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports: 
      - "5432:5432"
 
  pgadmin:
    container_name: pgAdmin
    image: dpage/pgadmin4:snapshot
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped

  BackendService:
    container_name: BackendService
    image: backend_service
    build:
      context: ./BackendService
      dockerfile: ./Dockerfile
    env_file:
      - .env
    environment:
      SERVER_PORT: ${SERVER_PORT}      
      POSTGRES_URL: ${POSTGRES_URL}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${SERVER_PORT}:80"
    depends_on: 
      - postgres
